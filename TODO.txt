- Add scripts (`svn_save_props_by_list`/`svn_save_props_by_nested_wc`) to
  save `svn:*` properties for selected files and directories to
  `<selected_dir>/.<svn_prop_name>` for a selected directory, to
  `<selected_dir>/.svnprops/<file_ext_name>/<svn_prop_name>.txt` for a file
  in a selected directory and to
  `<selected_file_dir>/.svnprops/<file_ext_name>/<svn_prop_name>.txt` for a
  selected file.
  If related files representing being saved properties has already existed
  before and there is changes with existing properties content, then a
  property must be saved into a temporary file and the file comparison window
  must be opened to merge the changes from the temporary file with the being
  saved file. After merge into temporary files those of them which has been
  changed must be writen back into the properties, otherwise left the
  properties unchanged.

- Add scripts (`svn_load_props_by_list`/`svn_load_props_by_nested_wc`) to
  load `svn:*` properties for selected files and directories from
  `<selected_dir>/.<svn_prop_name>` for a selected directory, from
  `<selected_dir>/.svnprops/<file_ext_name>/<svn_prop_name>.txt` for a file
  in a selected directory and from
  `<selected_file_dir>/.svnprops/<file_ext_name>/<svn_prop_name>.txt` for a
  selected file.
  If related files representing being loaded properties has already existed
  before and there is changes with existing properties content, then a
  property must be saved into a temporary file and the file comparison window
  must be opened to merge the changes from the temporary file with the being
  loaded file. After merge into temporary files those of them which has been
  changed must be writen back into the properties, otherwise left the
  properties unchanged.

- Add scripts (`svn_sync_props_by_list`/`svn_sync_props_by_nested_wc`) to
  save/load `svn:*` properties for selected files and directories to/from
  `<selected_dir>/.<svn_prop_name>` for a selected directory, to/from
  `<selected_dir>/.svnprops/<file_ext_name>/<svn_prop_name>.txt` for a file
  in a selected directory and to/from
  `<selected_file_dir>/.svnprops/<file_ext_name>/<svn_prop_name>.txt`
  for a selected file.
  If related files representing being saved/loaded properties has already
  existed before and there is changes with existing properties content, then
  a property must be saved into a temporary file and the file comparison
  window must be opened to merge the changes from the temporary file with the
  being saved/loaded file. After merge into temporary files those of them
  which has been changed must be writen back into the properties, otherwise
  left the properties unchanged.

Note:
  A merge into being saved/loaded property files and into temporary files
  must be handled by an external comparison/merging utility. To do it a
  temporary directory with property files must be constructed for both
  sides of a comparison/merge.

- Add scripts (`svn_edit_props_by_list`/`svn_edit_props_by_nested_wc`) to
  edit `svn:*` properties for selected files and directories.
  To do so save `svn:*` properties for selected files and directories to
  `<temp_dir>/<path_index>_<path_dir_name>/.<svn_prop_name>` for a selected
  directory, to
  `<temp_dir>/<path_index>_<path_dir_name>/<file_name>/.<svn_prop_name>` for a
  file in a selected directory and to
  `<temp_dir>/<path_index>_<path_file_name>/.<svn_prop_name>` for a selected
  file, where:
    <temp_dir> - generated temporary directory.
    <path_index> - index associated with a selection path.
    <path_dir_name> - a directory name in selection directory path.
    <path_file_name> - a file name in selection file path.
    <file_name> - name of a file in a selection directory path.
  Scripts would open a Notepad to edit all related property files together or
  one by one.

- Add scripts (`svn_copy_by_svn_ctrl_list.bat`/`git_copy_by_ctrl_list.bat`) to
  copy directories and files by inner svn/git control list may be including
  files which are not under control list (how is under question).
  Useful to copy version control files into intermediate storage or into
  archive to later extract and merge them into another svn/git repository.
  Additionally, add ability to generate/synchronize/edit .svnignore files by
  using previous scripts like `svn_*_props_by_list`/`svn_*_props_by_nested_wc`.

- Add scripts (`svn_add_files_by_list.bat`) to add files to the SVN
  using builtin files for the ignore filter like `.svnignore` both from the
  working copy root directory and from the working copy relative directory.

- All scripts should be able to merge changes in `.svnignore` files in
  externals to the parent and vice versa (accumulate changes while moving to
  the root and spread changes while moving to a leaf).

- All scripts should detect files and directories in the ignore properties
  which already under version control and explicitly report that to the user
  before synchronization or a commit.

- Support recursion for properties edit in a Working Copy in nested
  directories.

- Add scripts (`notepad_edit_svn_nested_wc_path_list` or/and
  `notepad_edit_svn_nested_wc_reporoot_list`)
  to collect for nested wc directories and remote reporoot urls and open them
  in the editer as a list.

- Add xml compare/merge support through the convertion by an external utility
  to an yaml format file and back.

- Git filter-branch alorithms to:
  * rewrite commits with wrong user names/emails
  May be with an external dialog with edit fields before a script execution to
  select:
  * specific commits or range of commits
  * specific users/emails or range of users/emails
  * etc

- Add new svn/git copy/move scripts to copy from one Working Copy (WC) to
  another through the shell copy plus svn/git add operation by a locally
  (not remotely and including local changes before a commit) requested list of
  versioned files/directories.
  Or instead save svn/git list of version control files into a saveload list.

- Copy a directory without content (subdirectories and files) to copy, for
  example, only a directory timestamps.
