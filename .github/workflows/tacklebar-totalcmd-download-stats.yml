name: totalcmd plugin downloads counter updating every 4 hours

on:
  schedule:
    - cron: "0 */4 * * *"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  traffic-downloads:
    runs-on: ubuntu-latest

    env:
      traffic_downloads_dir: traffic/downloads/plugin
      plugin_path: plugring/tacklebar

    steps:
      - name: allocate directories
        run: |
          mkdir $GITHUB_WORKSPACE/gh-workflow $GITHUB_WORKSPACE/totalcmd-stats
          echo "WORKFLOW_TEMPDIR=$(mktemp -d)" >> $GITHUB_ENV

      - name: allocate variables
        run: |
          echo "write_error_to_file=$WORKFLOW_TEMPDIR/err.log" >> $GITHUB_ENV
          echo "write_warning_to_file=$WORKFLOW_TEMPDIR/warn.log" >> $GITHUB_ENV

      - name: checkout gh-workflow
        uses: actions/checkout@v2
        with:
          repository: 'andry81/gh-workflow'
          path: gh-workflow

      - name: checkout totalcmd-stats
        uses: actions/checkout@v2
        with:
          repository: 'andry81/tacklebar--totalcmd-stats'
          path: totalcmd-stats
          token: ${{ secrets.SECRET_TOKEN }}

      - name: request traffic downloads json
        id: extract-plugin-downloads
        shell: bash
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE/totalcmd-stats
          chmod ug+x $GITHUB_WORKSPACE/gh-workflow/bash/totalcmd/extract-plugin-downloads.sh
          $GITHUB_WORKSPACE/gh-workflow/bash/totalcmd/extract-plugin-downloads.sh
          # caution: no operation after that line if non zero exit code happens above

      - name: allocate error and warning variables
        if: steps.extract-plugin-downloads.outcome != 'success'
        run: |
          # allocate variables here to make it visible in the next step
          [[ -f "$write_error_to_file" ]] && echo "error_string<<EOF" >> $GITHUB_ENV
          [[ -f "$write_error_to_file" ]] && cat "$write_error_to_file" >> $GITHUB_ENV
          [[ -f "$write_error_to_file" ]] && echo "EOF" >> $GITHUB_ENV
          [[ -f "$write_warning_to_file" ]] && echo "warning_string<<EOF" >> $GITHUB_ENV
          [[ -f "$write_warning_to_file" ]] && cat "$write_warning_to_file" >> $GITHUB_ENV
          [[ -f "$write_warning_to_file" ]] && echo "EOF" >> $GITHUB_ENV
          exit 0

      - name: print errors and warnings
        if: steps.extract-plugin-downloads.outcome != 'success'
        run: |
          [[ -n "$error_string" ]] && echo "::error ::$error_string"
          [[ -n "$warning_string" ]] && echo "::warning ::$warning_string"
          exit 255

      - name: commit totalcmd-stats
        run: |
          cd $GITHUB_WORKSPACE/totalcmd-stats
          git add .
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git commit -m "Automated traffic/downloads/plugin update"

      - name: push totalcmd-stats
        uses: ad-m/github-push-action@master
        with:
          repository: 'andry81/tacklebar--totalcmd-stats'
          directory: totalcmd-stats
          github_token: ${{ secrets.SECRET_TOKEN }}
